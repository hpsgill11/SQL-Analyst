WITH ranked_data AS (
    SELECT 
        ROW_NUMBER() OVER (PARTITION BY cntr_nbr ORDER BY create_date_time DESC) AS row_num,
        cntr_nbr,
        create_date_time + INTERVAL '3' HOUR AS create_date_time,
        menu_optn_name
    FROM wm.prod_trkg_tran
),
oLPN_age AS (
    SELECT 
        cntr_nbr,
        create_date_time,
        menu_optn_name
    FROM ranked_data
    WHERE row_num = 1
),
CTE AS (
    SELECT 
        Building.Facility,
                CASE 
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC(SYSDATE + INTERVAL '3' HOUR)               THEN 'Same Day'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 1)         THEN '1 Day old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 2)         THEN '2 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 3)         THEN '3 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 4)         THEN '4 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 5)         THEN '5 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 6)         THEN '6 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 7)         THEN '7 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 8)         THEN '8 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 9)         THEN '9 Days old'
            WHEN TRUNC(wm.orders.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 10)        THEN '10 Days old'
        END AS Date_Difference,
        wm.orders.created_dttm + INTERVAL '3' HOUR AS Order_Create_Date_EST,
        wm.orders.tc_order_id,
        CASE
        WHEN upper(wm.orders.D_country_code) = 'CA' THEN 'Domestic'
        ELSE 'Cross-Border' end as Order_Country,
        wm.orders.do_status || ' - ' || wm.do_status.description AS Order_Status,
        wm.orders.total_nbr_of_units AS DO_Quantity,
        wm.lpn.total_LPN_QTY AS oLPN_Quantity,
        CASE 
            WHEN SUM(wm.lpn.total_LPN_QTY) OVER (PARTITION BY wm.orders.tc_order_id) = wm.orders.total_nbr_of_units 
            THEN 'Good'
            ELSE 'Bad'
        END AS Invoice,
        lpn_facility_status.description AS oLPN_Status,
        current_locn_lpn.dsp_locn,
        wm.lpn.tc_lpn_id,
        wm.lpn.ship_via,
        wm.ship_via.description as Ship_Via_Description,
        wm.lpn.TRACKING_NBR,
        wm.lpn.TC_parent_LPN_id AS Pallet_ID,
        wm.lpn.TC_shipment_id AS Shipment_ID,
        CASE 
        WHEN wm.shipment.shipment_closed_indicator = 0 THEN 'Open' 
        WHEN wm.shipment.shipment_closed_indicator = 1 THEN 'Closed'
        ELSE NULL END as Shipment_Status,
        FLOOR(
            EXTRACT(DAY FROM (CAST(SYSDATE + INTERVAL '3' HOUR AS TIMESTAMP) - CAST(oLPN_age.create_date_time AS TIMESTAMP))) * 24 +
            EXTRACT(HOUR FROM (CAST(SYSDATE + INTERVAL '3' HOUR AS TIMESTAMP) - CAST(oLPN_age.create_date_time AS TIMESTAMP))) +
            EXTRACT(MINUTE FROM (CAST(SYSDATE + INTERVAL '3' HOUR AS TIMESTAMP) - CAST(oLPN_age.create_date_time AS TIMESTAMP))) / 60
        ) AS Age_in_Hours,
    
        
        oLPN_age.create_date_time AS Last_Updated_DTTM,
        oLPN_age.menu_optn_name AS Last_Transaction_Name
    FROM wm.orders
    LEFT JOIN wm.do_status 
        ON wm.orders.do_status = wm.do_status.order_status
    LEFT JOIN wm.lpn 
        ON wm.lpn.tc_order_id = wm.orders.tc_order_id  
       AND wm.lpn.inbound_outbound_indicator = 'O'
    LEFT JOIN wm.locn_hdr current_locn_lpn 
        ON wm.lpn.curr_sub_locn_id = current_locn_lpn.locn_id 
    LEFT JOIN wm.lpn_facility_status 
        ON wm.lpn.lpn_facility_status = wm.lpn_facility_status.lpn_facility_status 
       AND wm.lpn_facility_status.inbound_outbound_indicator = 'O'
    LEFT JOIN (
        SELECT 
            task_cmpl_ref_nbr,
            CASE 
                WHEN COUNT(DISTINCT Facility) > 1 THEN 'Cross Building - PNP'
                ELSE MAX(Facility)
            END AS Facility
        FROM (
            SELECT DISTINCT 
                wm.alloc_invn_dtl.task_cmpl_ref_nbr,
                CASE 
                    WHEN wm.alloc_invn_dtl.invn_type = 'R' AND wm.locn_lpn.work_grp = 'GIFT' THEN 'Milton'
                    WHEN wm.alloc_invn_dtl.invn_type = 'E' AND wm.locn_lpn.work_grp = 'GIFT' THEN 'Mississauga'
                    WHEN wm.locn_lpn.work_grp = 'SHLF' THEN 'Mississauga'
                    WHEN wm.locn_lpn.work_grp IN ('MFLW', 'MRPH', 'MACT', 'MRAK') THEN 'Milton'
                    ELSE wm.locn_lpn.work_grp
                END AS Facility
            FROM wm.alloc_invn_dtl 
            LEFT JOIN wm.locn_hdr locn_lpn 
                ON wm.alloc_invn_dtl.pull_locn_id = locn_lpn.locn_id 
            WHERE task_genrtn_ref_code = '1'
        )
        GROUP BY task_cmpl_ref_nbr
    ) Building 
        ON Building.task_cmpl_ref_nbr = wm.lpn.tc_lpn_id
    LEFT JOIN oLPN_age 
        ON oLPN_age.cntr_nbr = wm.lpn.tc_lpn_id
    LEFT JOIN wm.ship_via on wm.ship_via.ship_via = wm.lpn.ship_via
    LEFT JOIN WM.SHIPMENT ON WM.SHIPMENT.TC_SHIPMENT_ID = wm.lpn.TC_shipment_id
    WHERE wm.orders.order_type = 'ECOMM'
      AND wm.do_status.order_status IN ('160', '165')
      AND wm.lpn.lpn_facility_status != '99'
     --nd wm.orders.tc_order_id in ('c173902886639778_202502131007286706900426','c173948469919250_202502131519286711494129','c173949997890061_202502131937296715249622','c173051361373844_202502132046296716224545','c173576766371414_202502130825296704845103','c173841689891683_202502131046286707483653','c173732652350176_202502131052296707573528','c173747249433546_202502131237306708936027','c173898106292510_202502131340286709850016','c173750451612219_202502131540286711725088','c173949221253163_202502131719296713255874','c173801305802152_202502131752296713825369','c173950219335499_202502132007296715808769','c173946390184637_202502131107296707769812','c173523472118322_202502131316286709382374','c173894266012581_202502131343286709896657','c173893444372097_202502131531286711638393','c173948597773229_202502131552296711955579','c173948908499075_202502131631296712509651','c173949062966061_202502131655286712817829','c173949257788372_202502131725286713346284','c81437077906_202502131743296713642679','c173851282420975_202502130749296703991646','c173937355952116_202502130843286705354374','c173947242704642_202502131152286708394907','c173947744155957_202502131316286709382340','c173834640532166_202502131855296714691351','c173949966065724_202502131925286715122653','c173950140999967_202502131952296715425437','c173931214110778_202502132128286716589730','c173437948196290_202502130616286702700069','c173930444260493_202502131404296710222653','c173774932500818_202502132037296716135534','c173766493698245_202502130807286704465608','c173946520262142_202502130949286706665363','c173948221725383_202502131431296710734444','c173949036490129_202502131658286712860456','c173946004938548_202502131140286708184071','c173947442199073_202502131225286708806638','c173673330531734_202502131955296715462681','c173945736629671_202502130737306703785945','c173543778750493_202502132004296715761887','c173923545215896_202502131034286707326219','c173947155352642_202502131137286708156202','c173936710180098_202502131240286708961545','c171035777612286_202502131525296711569761','c173949092167789_202502131701286712943204','c173938318626140_202502131837296714455766','c173594562301244_202502131901286714790521')
),

Final_Output as(
SELECT
    CASE WHEN COUNT(DISTINCT CTE.Facility) OVER (PARTITION BY CTE.tc_order_id) > 1 
         THEN 'Cross Building'
         ELSE CTE.Facility
    END AS Facility,
    CTE.Date_Difference as Order_Age,
    CTE.Order_Create_Date_EST,
    CTE.tc_order_id,
    CTE.Order_Country as Destination,
    CTE.Order_Status,
    CTE.DO_Quantity,
    CTE.oLPN_Quantity,
    CTE.oLPN_Status,
    CTE.dsp_locn as Current_location,
    CTE.tc_lpn_id as oLPN,
            CASE
       WHEN COUNT( distinct CTE.tc_lpn_id) OVER (PARTITION BY CTE.tc_order_id) > 1 
            THEN 'Split Order'
       ELSE 'No Splits'
    END AS Split_Order_Check,
    CTE.ship_via,
    CTE.Ship_Via_Description,
    CTE.TRACKING_NBR as Tracking_Number,
    CTE.Pallet_ID,
        CASE
       -- # of non-null Pallet_ID rows
       WHEN ( SUM(CASE WHEN CTE.Pallet_ID IS NOT NULL THEN 1 ELSE 0 END)
              OVER (PARTITION BY CTE.tc_order_id) > 0
            )
            AND
            -- # of null Pallet_ID rows
            ( SUM(CASE WHEN CTE.Pallet_ID IS NULL THEN 1 ELSE 0 END)
              OVER (PARTITION BY CTE.tc_order_id) > 0
            )
       THEN 'Investigate'

       WHEN ( SUM(CASE WHEN CTE.Pallet_ID IS NOT NULL THEN 1 ELSE 0 END)
              OVER (PARTITION BY CTE.tc_order_id) > 0
            )
       THEN 'On Pallet'
       WHEN CTE.TRACKING_NBR is null then 'Invalid'
       ELSE 'No Update'
    END AS Investigation,
    CTE.Shipment_ID,
    CTE.Shipment_Status,
    CTE.Age_in_Hours as oLPN_Age,
CASE
    WHEN MAX(CTE.Age_in_Hours) OVER (PARTITION BY CTE.tc_order_id) > 47 THEN 'More than 48'
    WHEN MAX(CTE.Age_in_Hours) OVER (PARTITION BY CTE.tc_order_id) > 35 THEN 'More than 36'
    WHEN MAX(CTE.Age_in_Hours) OVER (PARTITION BY CTE.tc_order_id) > 23 THEN 'More than 24'
    ELSE 'Less than 24'
END AS Age_Category,
    CTE.Last_Updated_DTTM,
    CTE.Last_Transaction_Name
FROM CTE
where  Invoice != 'Bad')
--ORDER BY Order_Create_Date_EST)

SELECT *
FROM final_output
where 1=1
--and final_output.Age_Category not in ('Less than 24','More than 24')
--and final_output.Investigation != 'On Pallet'
--and final_output.Investigation != 'Investigate'
--and final_output.facility != 'Milton'
ORDER BY Order_Create_Date_EST,tc_order_id
