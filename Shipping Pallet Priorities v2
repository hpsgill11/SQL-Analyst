WITH
-- 1) Base subquery for pivot: group only by pallet + date difference
base AS (
    SELECT 
        CASE 
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC(SYSDATE + INTERVAL '3' HOUR)
                THEN 'Same Day'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 1)
                THEN '1 Day old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 2)
                THEN '2 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 3)
                THEN '3 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 4)
                THEN '4 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 5)
                THEN '5 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 6)
                THEN '6 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 7)
                THEN '7 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 8)
                THEN '8 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 9)
                THEN '9 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 10)
                THEN '10 Days old'
        END AS date_difference,
        l.tc_parent_lpn_id,
        pallet.last_updated_time,
        pallet.age,
        COUNT(DISTINCT l.tc_lpn_id) AS oLPN_Count
    FROM wm.orders o
    JOIN wm.lpn l 
        ON l.tc_order_id = o.tc_order_id
    LEFT JOIN (SELECT DISTINCT
       tc_lpn_id,
       
last_updated_dttm + INTERVAL '3' HOUR as last_updated_time,
       
       CASE 
         WHEN FLOOR(
             (SYSDATE + 3/24) 
             - (last_updated_dttm + 3/24)
           ) < 1 THEN
           -- Hours and minutes
           FLOOR(
             ((SYSDATE + 3/24) - (last_updated_dttm + 3/24)) * 24
           ) 
           || ' hr '
           || FLOOR(
                MOD(
                  ((SYSDATE + 3/24) - (last_updated_dttm + 3/24)) * 24 * 60, 
                  60
                )
              ) 
           || ' min'
         ELSE
           -- Days, hours, and minutes
           FLOOR(
             (SYSDATE + 3/24) 
             - (last_updated_dttm + 3/24)
           ) 
           || ' day '
           || FLOOR(
                MOD(
                  ((SYSDATE + 3/24) - (last_updated_dttm + 3/24)) * 24, 
                  24
                )
              ) 
           || ' hr '
           || FLOOR(
                MOD(
                  ((SYSDATE + 3/24) - (last_updated_dttm + 3/24)) * 24 * 60, 
                  60
                )
              ) 
           || ' min'
       END AS age
FROM   wm.lpn
WHERE  lpn_type = '2') pallet on pallet.tc_lpn_id = l.tc_parent_lpn_id
    WHERE o.order_type = 'ECOMM'
      AND l.tc_parent_lpn_id IS NOT NULL
      AND l.lpn_facility_status <> '50'        -- Exclude Loaded oLPN
      AND TRUNC(o.created_dttm + INTERVAL '3' HOUR) >= TRUNC(SYSDATE - 10)
    GROUP BY 
        CASE
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC(SYSDATE + INTERVAL '3' HOUR)
                THEN 'Same Day'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 1)
                THEN '1 Day old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 2)
                THEN '2 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 3)
                THEN '3 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 4)
                THEN '4 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 5)
                THEN '5 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 6)
                THEN '6 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 7)
                THEN '7 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 8)
                THEN '8 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 9)
                THEN '9 Days old'
            WHEN TRUNC(o.created_dttm + INTERVAL '3' HOUR) = TRUNC((SYSDATE + INTERVAL '3' HOUR) - 10)
                THEN '10 Days old'
        END,
        l.tc_parent_lpn_id,
        pallet.last_updated_time,
        pallet.age
),
-- 2) Pivot the counts by date-difference, but NOT by ship_via
pvt AS (
    SELECT
        tc_parent_lpn_id,
        last_updated_time,
        age,
        "Same Day"    AS same_day,
        "1 Day old"   AS one_day_old,
        "2 Days old"  AS two_days_old,
        "3 Days old"  AS three_days_old,
        "4 Days old"  AS four_days_old,
        "5 Days old"  AS five_days_old,
        "6 Days old"  AS six_days_old,
        "7 Days old"  AS seven_days_old,
        "8 Days old"  AS eight_days_old,
        "9 Days old"  AS nine_days_old,
        "10 Days old" AS ten_days_old
    FROM base
    PIVOT (
        SUM(oLPN_Count)
        FOR date_difference IN (
            'Same Day'    AS "Same Day",
            '1 Day old'   AS "1 Day old",
            '2 Days old'  AS "2 Days old",
            '3 Days old'  AS "3 Days old",
            '4 Days old'  AS "4 Days old",
            '5 Days old'  AS "5 Days old",
            '6 Days old'  AS "6 Days old",
            '7 Days old'  AS "7 Days old",
            '8 Days old'  AS "8 Days old",
            '9 Days old'  AS "9 Days old",
            '10 Days old' AS "10 Days old"
        )
    )
),
-- 3) Gather all ship_via for each pallet in one comma-separated list
via_list AS (
    SELECT
        l.tc_parent_lpn_id,
        LISTAGG(DISTINCT l.ship_via, ', ')
           WITHIN GROUP (ORDER BY l.ship_via) AS ship_via_list
    FROM wm.orders o
    JOIN wm.lpn l
        ON l.tc_order_id = o.tc_order_id
    WHERE o.order_type = 'ECOMM'
      AND l.tc_parent_lpn_id IS NOT NULL
      AND l.lpn_facility_status <> '50'
      AND TRUNC(o.created_dttm + INTERVAL '3' HOUR) >= TRUNC(SYSDATE - 10)
    GROUP BY l.tc_parent_lpn_id
)
SELECT
    pvt.tc_parent_lpn_id AS pallet,
    via_list.ship_via_list,
   -- to_char(pvt.last_updated_time, 'DD-Mon HH:MI AM') AS Last_Update_Time,
    pvt.age as Pallet_Age,
    CASE WHEN same_day       = 0 THEN NULL ELSE same_day       END AS same_day,
    CASE WHEN one_day_old    = 0 THEN NULL ELSE one_day_old    END AS one_day_old,
    CASE WHEN two_days_old   = 0 THEN NULL ELSE two_days_old   END AS two_days_old,
    CASE WHEN three_days_old = 0 THEN NULL ELSE three_days_old END AS three_days_old,
    CASE WHEN four_days_old  = 0 THEN NULL ELSE four_days_old  END AS four_days_old,
    CASE WHEN five_days_old  = 0 THEN NULL ELSE five_days_old  END AS five_days_old,
    CASE WHEN six_days_old   = 0 THEN NULL ELSE six_days_old   END AS six_days_old,
    CASE WHEN seven_days_old = 0 THEN NULL ELSE seven_days_old END AS seven_days_old,
    CASE WHEN eight_days_old = 0 THEN NULL ELSE eight_days_old END AS eight_days_old,
    CASE WHEN nine_days_old  = 0 THEN NULL ELSE nine_days_old  END AS nine_days_old,
    CASE WHEN ten_days_old   = 0 THEN NULL ELSE ten_days_old   END AS ten_days_old
FROM pvt
LEFT JOIN via_list
    ON pvt.tc_parent_lpn_id = via_list.tc_parent_lpn_id
ORDER BY 
    NVL(ten_days_old, 0)  DESC,
    NVL(nine_days_old, 0) DESC,
    NVL(eight_days_old, 0)DESC,
    NVL(seven_days_old, 0)DESC,
    NVL(six_days_old, 0)  DESC,
    NVL(five_days_old, 0) DESC,
    NVL(four_days_old, 0) DESC,
    NVL(three_days_old, 0)DESC,
    NVL(two_days_old, 0)  DESC,
    NVL(one_day_old, 0)   DESC,
    NVL(same_day, 0)      DESC,
    pvt.tc_parent_lpn_id;
