WITH MainTable AS (
SELECT 
    o.order_type,
    o.created_dttm,
    to_char(o.created_dttm + INTERVAL '3' HOUR, 'HH24') as Hour,
    o.DELIVERY_END_DTTM,
    o.tc_order_id,
    CASE 
        WHEN o.TOTAL_NBR_OF_UNITS = 1 THEN 'Single'
    ELSE 'Multi'
END AS Single_Multi_Flag,
    ds.description AS ORDER_STATUS,
    oli.invn_type,
    
    CASE
    WHEN o.order_type = 'ECOMM' and o.d_country_code = 'US' then oli.REF_FIELD4
    else NULL end as Ref_field4,
    
    CASE
    WHEN o.order_type = 'ECOMM'  and o.d_country_code = 'US' then wm.lulu_coo_restriction.NEW_REF_VALUE 
    else null 
    end as Actual_Ref_Field_4,
    
    f.Region,
    f.zone,
    o.d_facility_alias_id AS Store,
    o.MARK_FOR,
    o.d_country_code,
    o.d_city,
    o.LANE_NAME AS LANE_NAME,
    o.ref_field_8,
    o.REF_FIELD_1,
    CASE 
        WHEN oli.DO_DTL_STATUS = 112 THEN 'Special Processing Pending'
        WHEN oli.DO_DTL_STATUS = 100 THEN 'Draft'
        WHEN oli.DO_DTL_STATUS = 105 THEN 'Pre-Released'
        WHEN oli.DO_DTL_STATUS = 110 THEN 'Released'
        WHEN oli.DO_DTL_STATUS = 115 THEN 'Selected for Preview Wave'
        WHEN oli.DO_DTL_STATUS = 120 THEN 'Partially DC Allocated'
        ELSE 'Unknown'
    END AS Order_Line_Status,
    oli.item_name,
    oli.order_qty,
    oli.ALLOCATED_QTY,
    oli.order_qty - oli.ALLOCATED_QTY AS required_quantity,
    SUM(oli.order_qty - oli.ALLOCATED_QTY) OVER (
        PARTITION BY 
            o.order_type, 
            SUBSTR(f.Region, 1, 1),
            oli.invn_type, 
            oli.item_name, 
                CASE 
        WHEN o.order_type = 'ECOMM' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
        WHEN o.order_type = 'STRAT' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
        WHEN o.order_type = 'DCTRANSFER' THEN o.tc_order_id
        WHEN o.order_type = 'INTERCOMPANY' THEN o.tc_order_id
        WHEN o.order_type = 'RETAIL' THEN o.tc_order_id
        WHEN o.order_type = 'COMM' THEN o.tc_order_id
        WHEN o.order_type = 'WAREHOUSE' THEN o.tc_order_id
        WHEN o.order_type = 'SPECIAL' THEN o.MARK_FOR
        WHEN o.order_type = 'ALLOC' THEN TO_CHAR(o.DELIVERY_END_DTTM, 'YYYY/MM/DD')
    END
    ) AS "Total Required",
    ic.REF_FIELD2,
    ic.REF_FIELD3,
    ic.item_style,
    ic.Unit_Volume,
    oli.description, 
    ifm.pick_locn_assign_type,
    ic.PRODUCT_CLASS_ID,
    im.PROD_GROUP AS PROD_CLASS,
    SUM(CASE 
            WHEN lh.work_grp IN ('CRAK','PRAK') 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIS Reserve Available", 
    SUM(CASE 
            WHEN lh.work_grp = 'MRAK' 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIL Reserve Available", 
    SUM(CASE 
            WHEN lh.work_grp = 'SHLF' 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIS Active Available", 


            SUM(CASE 
            WHEN lh.work_grp = 'SHLF' 
                AND oli.invn_type = wmi.inventory_type 
                AND lh.dsp_locn LIKE 'AS3%'
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "AS3 Active Available", 

    SUM(CASE 
            WHEN lh.work_grp IN ('MFLW','MRPH','MACT') 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIL Active Available", 

                    SUM(CASE 
            WHEN lh.work_grp NOT IN ('SHLF') 
                AND oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn LIKE 'MN%'
                AND lh.locn_class = 'A'
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MN Active Available", 

                    SUM(CASE 
            WHEN lh.work_grp NOT IN ('SHLF') 
                AND oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn LIKE 'MH%'
                AND lh.locn_class = 'A'
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MH Active Available", 

                                SUM(CASE 
            WHEN --lh.work_grp IN ('SHLF') 
                 oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn = 'MIL-SH-UN-T01'
                AND lh.locn_class = 'R'
               -- AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIL_SHUNT",     

                                        SUM(CASE 
            WHEN --lh.work_grp IN ('SHLF') 
                 oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn = 'MIS-SH-UN-T01'
                AND lh.locn_class = 'R'
               -- AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIS_SHUNT",     

                                        SUM(CASE 
            WHEN --lh.work_grp IN ('SHLF') 
                 oli.invn_type = wmi.inventory_type
                AND lh.locn_brcd LIKE '%VAS%'
                AND lh.locn_brcd NOT LIKE '%ICA-%'
                AND lh.locn_class = 'R'
               -- AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "VAS",    

    SUM(CASE 
            WHEN lh.work_grp NOT IN ('CRAK', 'MRAK', 'SHLF', 'MFLW','MRPH','MACT','PRAK') 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "Needs Further Research",
    SUM(CASE 
            WHEN wmi.ALLOCATABLE = 'N' 
                AND oli.invn_type = wmi.inventory_type 
                AND NOT lh.dsp_locn = 'MIS-SH-UN-T01'
                AND NOT lh.dsp_locn = 'MIL-SH-UN-T01'
                AND NOT lh.dsp_locn LIKE 'ICA%'

            THEN (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty) 
            ELSE 0 
        END) AS "Total Unallocatable",
CASE 
    WHEN ifm.pick_locn_assign_type IN ('P06', 'PRK','P09') 
         OR ic.PRODUCT_CLASS_ID = 172 
         OR ic.item_style LIKE 'LM%' 
         OR oli.invn_type = 'R'
         OR oli.invn_type = 'S'
         OR oli.invn_type = 'B'
         OR oli.invn_type = 'C'
         OR oli.invn_type = 'O'
    THEN CASE 
            WHEN SUM(CASE 
                        WHEN lh.work_grp IN ('MFLW', 'MRPH', 'MACT', 'MRAK') 
                             AND oli.invn_type = wmi.inventory_type 
                             AND wmi.ALLOCATABLE = 'Y' 
                        THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                        ELSE 0 
                    END) > SUM(oli.order_qty - oli.ALLOCATED_QTY) OVER (
                        PARTITION BY 
                            o.order_type, 
                            SUBSTR(f.Region, 1, 1),
                            oli.invn_type, 
                            oli.item_name, 
                                CASE 
                    WHEN o.order_type = 'ECOMM' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'STRAT' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'DCTRANSFER' THEN o.tc_order_id
                    WHEN o.order_type = 'INTERCOMPANY' THEN o.tc_order_id
                    WHEN o.order_type = 'RETAIL' THEN o.tc_order_id
                    WHEN o.order_type = 'COMM' THEN o.tc_order_id
                    WHEN o.order_type = 'WAREHOUSE' THEN o.tc_order_id
                    WHEN o.order_type = 'SPECIAL' THEN o.MARK_FOR
                    WHEN o.order_type = 'ALLOC' THEN TO_CHAR(o.DELIVERY_END_DTTM, 'YYYY/MM/DD')
                END
                    )
            THEN SUM(CASE 
                        WHEN lh.work_grp IN ('MFLW', 'MRPH', 'MACT', 'MRAK') 
                             AND oli.invn_type = wmi.inventory_type 
                             AND wmi.ALLOCATABLE = 'Y' 
                        THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                        ELSE 0 
                    END)
            ELSE SUM(CASE 
                        WHEN lh.work_grp IN ('MFLW', 'MRPH', 'MACT', 'MRAK') 
                             AND oli.invn_type = wmi.inventory_type 
                             AND wmi.ALLOCATABLE = 'Y' 
                        THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                        ELSE 0 
                    END) - SUM(oli.order_qty - oli.ALLOCATED_QTY) OVER (
                        PARTITION BY 
                            o.order_type, 
                            SUBSTR(f.Region, 1, 1),
                            oli.invn_type, 
                            oli.item_name, 
                                CASE 
                    WHEN o.order_type = 'ECOMM' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'STRAT' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'DCTRANSFER' THEN o.tc_order_id
                    WHEN o.order_type = 'INTERCOMPANY' THEN o.tc_order_id
                    WHEN o.order_type = 'RETAIL' THEN o.tc_order_id
                    WHEN o.order_type = 'COMM' THEN o.tc_order_id
                    WHEN o.order_type = 'WAREHOUSE' THEN o.tc_order_id
                    WHEN o.order_type = 'SPECIAL' THEN o.MARK_FOR
                    WHEN o.order_type = 'ALLOC' THEN TO_CHAR(o.DELIVERY_END_DTTM, 'YYYY/MM/DD')
                END
                    )
        END


    ELSE CASE 
            WHEN SUM(CASE 
                        WHEN lh.work_grp IN ('CRAK', 'SHLF','PRAK') 
                             AND oli.invn_type = wmi.inventory_type 
                             AND wmi.ALLOCATABLE = 'Y' 
                        THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                        ELSE 0 
                    END) > SUM(oli.order_qty - oli.ALLOCATED_QTY) OVER (
                        PARTITION BY 
                            o.order_type, 
                            SUBSTR(f.Region, 1, 1),
                            oli.invn_type, 
                            oli.item_name, 
                                CASE 
                    WHEN o.order_type = 'ECOMM' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'STRAT' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'DCTRANSFER' THEN o.tc_order_id
                    WHEN o.order_type = 'INTERCOMPANY' THEN o.tc_order_id
                    WHEN o.order_type = 'RETAIL' THEN o.tc_order_id
                    WHEN o.order_type = 'COMM' THEN o.tc_order_id
                    WHEN o.order_type = 'WAREHOUSE' THEN o.tc_order_id
                    WHEN o.order_type = 'SPECIAL' THEN o.MARK_FOR
                    WHEN o.order_type = 'ALLOC' THEN TO_CHAR(o.DELIVERY_END_DTTM, 'YYYY/MM/DD')
                END
                    )
            THEN SUM(CASE 
                        WHEN lh.work_grp IN ('CRAK', 'SHLF','PRAK') 
                             AND oli.invn_type = wmi.inventory_type 
                             AND wmi.ALLOCATABLE = 'Y' 
                        THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                        ELSE 0 
                    END)
            ELSE SUM(CASE 
                        WHEN lh.work_grp IN ('CRAK', 'SHLF','PRAK') 
                             AND oli.invn_type = wmi.inventory_type 
                             AND wmi.ALLOCATABLE = 'Y' 
                        THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                        ELSE 0 
                    END) - SUM(oli.order_qty - oli.ALLOCATED_QTY) OVER (
                        PARTITION BY 
                            o.order_type, 
                            SUBSTR(f.Region, 1, 1),
                            oli.invn_type, 
                            oli.item_name, 
                                CASE 
                    WHEN o.order_type = 'ECOMM' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'STRAT' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
                    WHEN o.order_type = 'DCTRANSFER' THEN o.tc_order_id
                    WHEN o.order_type = 'INTERCOMPANY' THEN o.tc_order_id
                    WHEN o.order_type = 'RETAIL' THEN o.tc_order_id
                    WHEN o.order_type = 'COMM' THEN o.tc_order_id
                    WHEN o.order_type = 'WAREHOUSE' THEN o.tc_order_id
                    WHEN o.order_type = 'SPECIAL' THEN o.MARK_FOR
                    WHEN o.order_type = 'ALLOC' THEN TO_CHAR(o.DELIVERY_END_DTTM, 'YYYY/MM/DD')
                END
                    )
        END
END AS "Waveable Quantity",
    CASE 
        WHEN SUM(CASE 
                WHEN lh.work_grp IN ('CRAK','PRAK') 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp = 'MRAK' 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp = 'SHLF' 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp IN ('MFLW','MRPH','MACT') 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp NOT IN ('CRAK', 'MRAK', 'SHLF', 'MFLW','MRPH','MACT','PRAK') 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END) = 0
        THEN 'Zero Allocatable'
        ELSE 'Allocatable'
    END AS Allocatable_Flag,
CASE
  -- ECOMM picks, in priority order
  WHEN oli.invn_type = 'E'     AND ifm.pick_locn_assign_type = 'P09'  THEN 'Milton - Footwear'
  WHEN oli.invn_type = 'E'      AND ic.PRODUCT_CLASS_ID = 172   THEN 'Milton - Mats'
  WHEN oli.invn_type = 'E'     AND ifm.pick_locn_assign_type = 'P06'  THEN 'Milton - Bags'
  WHEN oli.invn_type = 'E'   AND ic.item_style LIKE 'LM%'  THEN 'Milton - Mens'
  WHEN oli.invn_type = 'E'     AND ic.item_style LIKE 'LW%'  THEN 'Mississauga - Womens'
  WHEN oli.invn_type = 'E'    AND ic.item_style LIKE 'LU%'  THEN 'Mississauga - Accessories'
-- Fallbacks for non-ECOMM or R-inventory
  WHEN ifm.pick_locn_assign_type = 'P09'  THEN 'Milton - Footwear'
  WHEN ic.PRODUCT_CLASS_ID = 172  THEN 'Milton - Mats'
  WHEN o.order_type in ('ALLOC','REPLEN','SPECIAL') and oli.invn_type = 'R'     AND ifm.pick_locn_assign_type IN ('P06','P05')  THEN 'Milton - Accessories'
  WHEN o.order_type in ('ALLOC','REPLEN','SPECIAL') and oli.invn_type = 'R'     AND ifm.pick_locn_assign_type NOT IN ('P06','P05')  THEN 'Milton - Apparel'

  WHEN oli.invn_type != 'E' THEN 'Milton'
  ELSE NULL
END AS Building

FROM 
    WM.orders o 
    LEFT JOIN WM.order_line_item oli ON o.order_id = oli.order_id
    LEFT JOIN WM.item_facility_mapping_wms ifm ON ifm.item_id = oli.item_id
    LEFT JOIN WM.do_status ds ON ds.order_status = o.do_status
    LEFT JOIN WM.item_cbo ic ON oli.item_name = ic.item_name 
    LEFT JOIN WM.wm_inventory wmi ON oli.item_id = wmi.ITEM_ID AND oli.invn_type = wmi.inventory_type
    LEFT JOIN WM.locn_hdr lh ON wmi.LOCATION_ID = lh.LOCN_ID
    LEFT JOIN WM.item_master im ON ic.item_id = im.item_id
    LEFT JOIN WM.facility f ON o.d_facility_id = f.facility_id
    LEFT JOIN wm.lulu_coo_restriction on wm.lulu_coo_restriction.item_id = ic.item_id and wm.lulu_coo_restriction.INVENTORY_TYPE = oli.invn_type
WHERE 
    o.do_status IN ('110','120')
   AND oli.DO_DTL_STATUS <= 120
    --and o.d_facility_alias_id = '752'
and o.order_type IN ('ECOMM')
--and ifm.pick_locn_assign_type = 'P09'
--AND    TRUNC(o.DELIVERY_END_DTTM) = TO_DATE('2025/07/07', 'YYYY/MM/DD') 
--and o.MARK_FOR= 'Special FO Straggler Week 23'

   --and o.tc_order_id like ('c174405257290051_20250703182211431364260')
--AND   not TRUNC(o.created_dttm) = TO_DATE('2025/07/02', 'YYYY/MM/DD') 
AND   not TRUNC(o.created_dttm) = TO_DATE('2025/07/15', 'YYYY/MM/DD') 
--AND o.created_dttm = TO_DATE('2025/05/07 00:00', 'YYYY/MM/DD HH24:MI')
AND oli.invn_type = 'E'
--AND NOT (  upper(o.d_city) IN ('APO','FPO','DPO')  OR upper(o.d_city) LIKE '%AFG%')
--and   o.d_city  not  IN ('APO','FPO','DPO')
--and o.lane_name not like ('CP%')
--AND  SUBSTR(f.Region, 1, 1) = '1'
   --and     oli.REF_FIELD4 != wm.lulu_coo_restriction.NEW_REF_VALUE 
   -- and ic.item_name = '153833072'
--and o.d_country_code = 'US' and oli.REF_FIELD4 = 'A'
AND  (o.d_country_code = 'US' and  oli.REF_FIELD4 <> 'A'   OR oli.REF_FIELD4 IS NULL  OR oli.REF_FIELD4 = 'P'  )

GROUP BY 
    o.created_dttm,
    o.tc_order_id,
    o.d_city,
    o.LANE_NAME,
    o.ref_field_8,
    o.REF_FIELD_1,
    oli.DO_DTL_STATUS,
    oli.invn_type,
    CASE
    WHEN o.order_type = 'ECOMM' and o.d_country_code = 'US' then oli.REF_FIELD4
    else NULL end,

    CASE
    WHEN o.order_type = 'ECOMM'  and o.d_country_code = 'US' then wm.lulu_coo_restriction.NEW_REF_VALUE 
    else null 
    end,
    o.order_type,
       CASE 
        WHEN o.TOTAL_NBR_OF_UNITS = 1 THEN 'Single'
    ELSE 'Multi'
END ,
    oli.item_name,
    ds.description,
    ic.REF_FIELD2,
    ic.REF_FIELD3,
    ic.item_style,
    ic.Unit_Volume,
    oli.description,
    oli.order_qty,
    oli.ALLOCATED_QTY,
    ifm.pick_locn_assign_type,
    ic.PRODUCT_CLASS_ID,
    im.PROD_GROUP,
    o.d_country_code,
    f.zone,
    f.Region,
    o.d_facility_alias_id,
    o.MARK_FOR,
    o.DELIVERY_END_DTTM)

SELECT 
    MainTable.order_type,
    MainTable.created_dttm,
    MainTable.Hour as Created_Hour,
    MainTable.DELIVERY_END_DTTM,
    MainTable.tc_order_id,
    MainTable.Single_Multi_Flag,
    MainTable.ORDER_STATUS,
    MainTable.invn_type,
    MainTable.REF_FIELD4,
    MainTable.Actual_Ref_Field_4,
    MainTable.zone,
    MainTable.Region,
    MainTable.Store,
    MainTable.MARK_FOR,
    MainTable.d_country_code as Country,
    MainTable.d_city,
    MainTable.LANE_NAME,
    MainTable.ref_field_8 as BBR_Flag,
    MainTable.REF_FIELD_1,
    MainTable.Order_Line_Status,
TRIM(BOTH ',' FROM (
    CASE 
        WHEN COUNT(
            CASE 
                WHEN --MainTable.pick_locn_assign_type IN ('P06', 'PRK')
                   MainTable.PRODUCT_CLASS_ID = 172
                THEN 1 
                ELSE NULL 
            END) OVER (PARTITION BY MainTable.tc_order_id) > 0 
        THEN 'Mats' 
        ELSE '' 
    END ||

    CASE 
        WHEN COUNT(
            CASE 
                WHEN MainTable.pick_locn_assign_type IN ('P06')
                 --  MainTable.PRODUCT_CLASS_ID = 172
                THEN 1 
                ELSE NULL 
            END) OVER (PARTITION BY MainTable.tc_order_id) > 0 
        THEN 'Bags' 
        ELSE '' 
    END ||

    CASE
        WHEN COUNT(
            CASE 
                WHEN MainTable.pick_locn_assign_type = 'P09'
                THEN 1 
                ELSE NULL 
            END) OVER (PARTITION BY MainTable.tc_order_id) > 0 
        THEN ',Footwear'
        ELSE ''
    END ||
    CASE
        WHEN COUNT(
            CASE 
                WHEN MainTable.item_style LIKE 'LM%' 
                  AND MainTable.pick_locn_assign_type NOT IN ('P06', 'P09')
                  AND MainTable.PRODUCT_CLASS_ID != 172
                THEN 1 
                ELSE NULL 
            END) OVER (PARTITION BY MainTable.tc_order_id) > 0 
        THEN ',Mens'
        ELSE ''
    END ||
    CASE
        WHEN COUNT(
            CASE 
                WHEN MainTable.item_style LIKE 'LW%' 
                  AND MainTable.pick_locn_assign_type NOT IN ('P06', 'P09')
                  AND MainTable.PRODUCT_CLASS_ID != 172
                THEN 1 
                ELSE NULL 
            END) OVER (PARTITION BY MainTable.tc_order_id) > 0 
        THEN ',Womens'
        ELSE ''
    END ||
    CASE
        WHEN COUNT(
            CASE 
                WHEN MainTable.item_style LIKE 'LU%'
                  AND MainTable.pick_locn_assign_type NOT IN ('P06', 'P09')
                  AND MainTable.PRODUCT_CLASS_ID != 172
                THEN 1 
                ELSE NULL 
            END) OVER (PARTITION BY MainTable.tc_order_id) > 0 
        THEN ',Accessories'
        ELSE ''
    END
        ))
 AS Order_Inventory_Flags,
    MainTable.Building,
    MainTable.item_name,
    MainTable.order_qty,
    MainTable.ALLOCATED_QTY,
    MainTable.required_quantity,
    MainTable.REF_FIELD2,
    MainTable.REF_FIELD3,
    MainTable.item_style,
    MainTable.Unit_Volume,
    MainTable.description, 
    MainTable.pick_locn_assign_type,
    MainTable.PRODUCT_CLASS_ID,
    MainTable.PROD_CLASS,
    MainTable."MIS Active Available", 
    MainTable."AS3 Active Available", 
    MainTable."MIS Reserve Available", 
    MainTable."MIL Reserve Available", 
    MainTable."MIL Active Available", 
    MainTable."MN Active Available", 
    MainTable."MH Active Available", 
    MainTable."Needs Further Research",
    MainTable."MIL_SHUNT", 
    MainTable."MIS_SHUNT", 
    MainTable."VAS", 
    MainTable."Total Unallocatable",
    MainTable."Total Required",
    MainTable."Waveable Quantity",
    MainTable.Allocatable_Flag,
    CASE
        WHEN SUM(
                CASE 
                    WHEN MainTable."Waveable Quantity" < 0 
                    THEN 1 
                    ELSE 0 
                END
            ) OVER (PARTITION BY MainTable.tc_order_id) > 0 
        THEN 'Waving Issue'
        ELSE 'Waveable'
    END AS Waving_Issue
FROM MainTable
--where MainTable.Ref_field4 = 'A';
