WITH MainTable AS (
SELECT 
    o.order_type,
    o.created_dttm,
    to_char(o.created_dttm, 'HH24') as Hour,
    o.DELIVERY_END_DTTM,
    o.tc_order_id,
    CASE 
        WHEN o.TOTAL_NBR_OF_UNITS = 1 THEN 'Single'
    ELSE 'Multi'
END AS Single_Multi_Flag,
    ds.description AS ORDER_STATUS,
    oli.invn_type,
    
    CASE
    WHEN o.order_type = 'ECOMM' and o.d_country_code = 'US' then oli.REF_FIELD4
    else NULL end as Ref_field4,
    
    CASE
    WHEN o.order_type = 'ECOMM'  and o.d_country_code = 'US' then wm.lulu_coo_restriction.NEW_REF_VALUE 
    else null 
    end as Actual_Ref_Field_4,
    
    f.Region,
    f.zone,
    o.d_facility_alias_id AS Store,
    o.MARK_FOR,
    o.d_country_code,
    o.d_city,
    o.LANE_NAME AS LANE_NAME,
    o.ref_field_8,
    o.REF_FIELD_1,
    oli_status.code_desc as Order_Line_Status,
    oli.item_name,
    oli.order_qty,
    oli.ALLOCATED_QTY,
    oli.order_qty - oli.ALLOCATED_QTY AS required_quantity,
    SUM(oli.order_qty - oli.ALLOCATED_QTY) OVER (
        PARTITION BY 
            o.order_type, 
            SUBSTR(f.Region, 1, 1),
            oli.invn_type, 
            oli.item_name, 
                CASE 
        WHEN o.order_type = 'ECOMM' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
        WHEN o.order_type = 'STRAT' THEN TO_CHAR(o.created_dttm, 'YYYY/MM/DD') 
        WHEN o.order_type = 'DCTRANSFER' THEN o.tc_order_id
        WHEN o.order_type = 'INTERCOMPANY' THEN o.tc_order_id
        WHEN o.order_type = 'RETAIL' THEN o.tc_order_id
        WHEN o.order_type = 'COMM' THEN o.tc_order_id
        WHEN o.order_type = 'WAREHOUSE' THEN o.tc_order_id
        WHEN o.order_type = 'SPECIAL' THEN o.MARK_FOR
        WHEN o.order_type = 'ALLOC' THEN TO_CHAR(o.DELIVERY_END_DTTM, 'YYYY/MM/DD')
    END
    ) AS "Total Required",
    ic.REF_FIELD2,
    ic.REF_FIELD3,
    ic.item_style,
    ic.Unit_Volume,
    oli.description, 
    ifm.pick_locn_assign_type,
    ic.PRODUCT_CLASS_ID,
    im.PROD_GROUP AS PRODUCT_CLASS,
    
    SUM(CASE 
            WHEN lh.work_grp IN ('CRAK','PRAK') 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIS Reserve Available", 
    SUM(CASE 
            WHEN lh.work_grp = 'MRAK' 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIL Reserve Available", 
    SUM(CASE 
            WHEN lh.work_grp = 'SHLF' 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIS Active Available", 


            SUM(CASE 
            WHEN lh.work_grp = 'SHLF' 
                AND oli.invn_type = wmi.inventory_type 
                AND lh.dsp_locn LIKE 'AS3%'
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "AS3 Active Available", 

    SUM(CASE 
            WHEN lh.work_grp IN ('MFLW','MRPH','MACT') 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIL Active Available", 
        
                            SUM(CASE 
            WHEN lh.work_grp NOT IN ('SHLF') 
                AND oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn LIKE 'MA%'
                AND lh.locn_class = 'A'
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MA Active Available", 

                    SUM(CASE 
            WHEN lh.work_grp NOT IN ('SHLF') 
                AND oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn LIKE 'MN%'
                AND lh.locn_class = 'A'
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MN Active Available", 

                    SUM(CASE 
            WHEN lh.work_grp NOT IN ('SHLF') 
                AND oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn LIKE 'MH%'
                AND lh.locn_class = 'A'
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MH Active Available", 

                                SUM(CASE 
            WHEN --lh.work_grp IN ('SHLF') 
                 oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn = 'MIL-SH-UN-T01'
                AND lh.locn_class = 'R'
               -- AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIL_SHUNT",     

                                        SUM(CASE 
            WHEN --lh.work_grp IN ('SHLF') 
                 oli.invn_type = wmi.inventory_type
                AND lh.dsp_locn = 'MIS-SH-UN-T01'
                AND lh.locn_class = 'R'
               -- AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "MIS_SHUNT",     

                                        SUM(CASE 
            WHEN --lh.work_grp IN ('SHLF') 
                 oli.invn_type = wmi.inventory_type
                AND lh.locn_brcd LIKE '%VAS%'
                AND lh.locn_brcd NOT LIKE '%ICA-%'
                AND lh.locn_class = 'R'
               -- AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "VAS",    
    

    SUM(CASE 
            WHEN lh.work_grp NOT IN ('CRAK', 'MRAK', 'SHLF', 'MFLW','MRPH','MACT','PRAK') 
                AND oli.invn_type = wmi.inventory_type 
                AND wmi.ALLOCATABLE = 'Y' 
            THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
            ELSE 0 
        END) AS "Needs Further Research",
    SUM(CASE 
            WHEN wmi.ALLOCATABLE = 'N' 
                AND oli.invn_type = wmi.inventory_type 
                AND NOT lh.dsp_locn = 'MIS-SH-UN-T01'
                AND NOT lh.dsp_locn = 'MIL-SH-UN-T01'
                AND NOT lh.dsp_locn LIKE 'ICA%'

            THEN (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty) 
            ELSE 0 
        END) AS "Total Unallocatable",
        
CASE
  WHEN ifm.pick_locn_assign_type IN ('P06','PRK','P09')
       OR ic.PRODUCT_CLASS_ID = 172
       OR ic.ITEM_STYLE LIKE 'LM%'
       OR oli.INVN_TYPE IN ('R','S','B','C','O')
  THEN
    CASE
      WHEN SUM(
             CASE
               WHEN lh.WORK_GRP IN ('MFLW','MRPH','MACT','MRAK')
                    AND oli.INVN_TYPE = wmi.INVENTORY_TYPE
                    AND wmi.ALLOCATABLE = 'Y'
                    AND wmi.CNTRY_OF_ORGN       IS NOT NULL
                    AND wmi.CNTRY_OF_ORGN      <> 'ZZ'
                    AND wmi.CNTRY_OF_ORGN      <> '*'
                    AND ic.UNIT_VOLUME        <= 1499
               THEN GREATEST(0, wmi.ON_HAND_QTY - wmi.WM_ALLOCATED_QTY + wmi.TO_BE_FILLED_QTY)
               ELSE 0
             END
           )
           > SUM(oli.ORDER_QTY - oli.ALLOCATED_QTY)
               OVER (
                 PARTITION BY
                   o.ORDER_TYPE,
                   SUBSTR(f.REGION,1,1),
                   oli.INVN_TYPE,
                   oli.ITEM_NAME,
                   CASE
                     WHEN o.ORDER_TYPE = 'ECOMM' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'STRAT' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'FINISHER'
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE IN ('DCTRANSFER','INTERCOMPANY','RETAIL','COMM','WAREHOUSE')
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE = 'SPECIAL'
                         THEN o.MARK_FOR
                     WHEN o.ORDER_TYPE = 'ALLOC'
                         THEN TO_CHAR(o.DELIVERY_END_DTTM,'YYYY/MM/DD')
                   END
               )
      THEN SUM(
             CASE
               WHEN lh.WORK_GRP IN ('MFLW','MRPH','MACT','MRAK')
                    AND oli.INVN_TYPE = wmi.INVENTORY_TYPE
                    AND wmi.ALLOCATABLE = 'Y'
                    AND wmi.CNTRY_OF_ORGN       IS NOT NULL
                    AND wmi.CNTRY_OF_ORGN      <> 'ZZ'
                    AND wmi.CNTRY_OF_ORGN      <> '*'
                    AND ic.UNIT_VOLUME        <= 1499
               THEN GREATEST(0, wmi.ON_HAND_QTY - wmi.WM_ALLOCATED_QTY + wmi.TO_BE_FILLED_QTY)
               ELSE 0
             END
           )
      ELSE SUM(
             CASE
               WHEN lh.WORK_GRP IN ('MFLW','MRPH','MACT','MRAK')
                    AND oli.INVN_TYPE = wmi.INVENTORY_TYPE
                    AND wmi.ALLOCATABLE = 'Y'
                    AND wmi.CNTRY_OF_ORGN       IS NOT NULL
                    AND wmi.CNTRY_OF_ORGN      <> 'ZZ'
                    AND wmi.CNTRY_OF_ORGN      <> '*'
                    AND ic.UNIT_VOLUME        <= 1499
               THEN GREATEST(0, wmi.ON_HAND_QTY - wmi.WM_ALLOCATED_QTY + wmi.TO_BE_FILLED_QTY)
               ELSE 0
             END
           )
           - SUM(oli.ORDER_QTY - oli.ALLOCATED_QTY)
               OVER (
                 PARTITION BY
                   o.ORDER_TYPE,
                   SUBSTR(f.REGION,1,1),
                   oli.INVN_TYPE,
                   oli.ITEM_NAME,
                   CASE
                     WHEN o.ORDER_TYPE = 'ECOMM' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'STRAT' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'FINISHER'
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE IN ('DCTRANSFER','INTERCOMPANY','RETAIL','COMM','WAREHOUSE')
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE = 'SPECIAL'
                         THEN o.MARK_FOR
                     WHEN o.ORDER_TYPE = 'ALLOC'
                         THEN TO_CHAR(o.DELIVERY_END_DTTM,'YYYY/MM/DD')
                   END
               )
    END
  ELSE
    CASE
      WHEN SUM(
             CASE
               WHEN lh.WORK_GRP IN ('CRAK','SHLF','PRAK')
                    AND oli.INVN_TYPE = wmi.INVENTORY_TYPE
                    AND wmi.ALLOCATABLE = 'Y'
                    AND wmi.CNTRY_OF_ORGN       IS NOT NULL
                    AND wmi.CNTRY_OF_ORGN      <> 'ZZ'
                    AND wmi.CNTRY_OF_ORGN      <> '*'
                    AND ic.UNIT_VOLUME        <= 1499
               THEN GREATEST(0, wmi.ON_HAND_QTY - wmi.WM_ALLOCATED_QTY + wmi.TO_BE_FILLED_QTY)
               ELSE 0
             END
           )
           > SUM(oli.ORDER_QTY - oli.ALLOCATED_QTY)
               OVER (
                 PARTITION BY
                   o.ORDER_TYPE,
                   SUBSTR(f.REGION,1,1),
                   oli.INVN_TYPE,
                   oli.ITEM_NAME,
                   CASE
                     WHEN o.ORDER_TYPE = 'ECOMM' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'STRAT' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'FINISHER'
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE IN ('DCTRANSFER','INTERCOMPANY','RETAIL','COMM','WAREHOUSE')
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE = 'SPECIAL'
                         THEN o.MARK_FOR
                     WHEN o.ORDER_TYPE = 'ALLOC'
                         THEN TO_CHAR(o.DELIVERY_END_DTTM,'YYYY/MM/DD')
                   END
               )
      THEN SUM(
             CASE
               WHEN lh.WORK_GRP IN ('CRAK','SHLF','PRAK')
                    AND oli.INVN_TYPE = wmi.INVENTORY_TYPE
                    AND wmi.ALLOCATABLE = 'Y'
                    AND wmi.CNTRY_OF_ORGN       IS NOT NULL
                    AND wmi.CNTRY_OF_ORGN      <> 'ZZ'
                    AND wmi.CNTRY_OF_ORGN      <> '*'
                    AND ic.UNIT_VOLUME        <= 1499
               THEN GREATEST(0, wmi.ON_HAND_QTY - wmi.WM_ALLOCATED_QTY + wmi.TO_BE_FILLED_QTY)
               ELSE 0
             END
           )
      ELSE SUM(
             CASE
               WHEN lh.WORK_GRP IN ('CRAK','SHLF','PRAK')
                    AND oli.INVN_TYPE = wmi.INVENTORY_TYPE
                    AND wmi.ALLOCATABLE = 'Y'
                    AND wmi.CNTRY_OF_ORGN       IS NOT NULL
                    AND wmi.CNTRY_OF_ORGN      <> 'ZZ'
                    AND wmi.CNTRY_OF_ORGN      <> '*'
                    AND ic.UNIT_VOLUME        <= 1499
               THEN GREATEST(0, wmi.ON_HAND_QTY - wmi.WM_ALLOCATED_QTY + wmi.TO_BE_FILLED_QTY)
               ELSE 0
             END
           )
           - SUM(oli.ORDER_QTY - oli.ALLOCATED_QTY)
               OVER (
                 PARTITION BY
                   o.ORDER_TYPE,
                   SUBSTR(f.REGION,1,1),
                   oli.INVN_TYPE,
                   oli.ITEM_NAME,
                   CASE
                     WHEN o.ORDER_TYPE = 'ECOMM' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'STRAT' THEN TO_CHAR(o.CREATED_DTTM,'YYYY/MM/DD')
                     WHEN o.ORDER_TYPE = 'FINISHER'
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE IN ('DCTRANSFER','INTERCOMPANY','RETAIL','COMM','WAREHOUSE')
                         THEN o.TC_ORDER_ID
                     WHEN o.ORDER_TYPE = 'SPECIAL'
                         THEN o.MARK_FOR
                     WHEN o.ORDER_TYPE = 'ALLOC'
                         THEN TO_CHAR(o.DELIVERY_END_DTTM,'YYYY/MM/DD')
                   END
               )
    END
END AS "WAVEABLE QUANTITY",

    CASE 
        WHEN SUM(CASE 
                WHEN lh.work_grp IN ('CRAK','PRAK') 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp = 'MRAK' 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp = 'SHLF' 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp IN ('MFLW','MRPH','MACT') 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END)
            + SUM(CASE 
                WHEN lh.work_grp NOT IN ('CRAK', 'MRAK', 'SHLF', 'MFLW','MRPH','MACT','PRAK') 
                    AND oli.invn_type = wmi.inventory_type 
                    AND wmi.ALLOCATABLE = 'Y' 
                THEN GREATEST(0, (wmi.on_hand_qty - wmi.WM_ALLOCATED_QTY + wmi.to_be_filled_qty)) 
                ELSE 0 
            END) = 0
        THEN 'Zero Allocatable'
        ELSE 'Allocatable'
    END AS Allocatable_Flag,
    
CASE
  -- ECOMM picks, in priority order
  WHEN oli.invn_type = 'E'     AND ifm.pick_locn_assign_type = 'P09'  THEN 'Milton - Footwear'
  WHEN oli.invn_type = 'E'      AND ic.PRODUCT_CLASS_ID = 172   THEN 'Milton - Mats'
  WHEN oli.invn_type = 'E'     AND ifm.pick_locn_assign_type = 'P06'  THEN 'Milton - Bags'
  WHEN oli.invn_type = 'E'   AND ic.item_style LIKE 'LM%'  THEN 'Milton - Mens'
  WHEN oli.invn_type = 'E'     AND ic.item_style LIKE 'LW%'  THEN 'Mississauga - Womens'
  WHEN oli.invn_type = 'E'    AND ic.item_style LIKE 'LU%'  THEN 'Mississauga - Accessories'
-- Fallbacks for non-ECOMM or R-inventory
  WHEN ifm.pick_locn_assign_type = 'P09'  THEN 'Milton - Footwear'
  WHEN ic.PRODUCT_CLASS_ID = 172  THEN 'Milton - Mats'
  WHEN o.order_type in ('ALLOC','REPLEN','SPECIAL') and oli.invn_type = 'R'     AND ifm.pick_locn_assign_type IN ('P06','P05')  THEN 'Milton - Accessories'
  WHEN o.order_type in ('ALLOC','REPLEN','SPECIAL') and oli.invn_type = 'R'     AND ifm.pick_locn_assign_type NOT IN ('P06','P05')  THEN 'Milton - Apparel'
  WHEN oli.invn_type != 'E' THEN 'Milton'
  ELSE NULL
END AS Wave_Building

FROM 
    WM.orders o 
    LEFT JOIN WM.order_line_item oli ON o.order_id = oli.order_id
    LEFT JOIN WM.item_facility_mapping_wms ifm ON ifm.item_id = oli.item_id
    LEFT JOIN WM.do_status ds ON ds.order_status = o.do_status
    LEFT JOIN WM.item_cbo ic ON oli.item_name = ic.item_name 
    LEFT JOIN WM.wm_inventory wmi ON oli.item_id = wmi.ITEM_ID AND oli.invn_type = wmi.inventory_type
    LEFT JOIN WM.locn_hdr lh ON wmi.LOCATION_ID = lh.LOCN_ID
    LEFT JOIN WM.item_master im ON ic.item_id = im.item_id
    LEFT JOIN WM.facility f ON o.d_facility_id = f.facility_id
    LEFT JOIN wm.lulu_coo_restriction on wm.lulu_coo_restriction.item_id = ic.item_id and wm.lulu_coo_restriction.INVENTORY_TYPE = oli.invn_type
    LEFT JOIN wm.sys_code oli_status on oli_status.code_id = oli.DO_DTL_STATUS and oli_status.code_type = '119'
WHERE 
    o.do_status IN ('110','120')
   AND oli.DO_DTL_STATUS <= 120
    --and o.d_facility_alias_id = '752'
--and o.order_type IN ('ECOMM')
--and ifm.pick_locn_assign_type = 'P09'
--AND    TRUNC(o.DELIVERY_END_DTTM) = TO_DATE('2025/08/07', 'YYYY/MM/DD') 
--and o.MARK_FOR= 'Special FO Straggler Week 23'

   --and o.tc_order_id like ('c174405257290051_20250703182211431364260')
--AND   not TRUNC(o.created_dttm) = TO_DATE('2025/08/02', 'YYYY/MM/DD') 
--AND   not TRUNC(o.created_dttm) = TO_DATE('2025/07/30', 'YYYY/MM/DD') 
--AND o.created_dttm = TO_DATE('2025/05/07 00:00', 'YYYY/MM/DD HH24:MI')
--AND oli.invn_type = 'E'
--AND NOT (  upper(o.d_city) IN ('APO','FPO','DPO')  OR upper(o.d_city) LIKE '%AFG%')
--and   o.d_city  not  IN ('APO','FPO','DPO')
--and o.lane_name not like ('CP%')
--AND  SUBSTR(f.Region, 1, 1) = '3'
   --and     oli.REF_FIELD4 != wm.lulu_coo_restriction.NEW_REF_VALUE 
   -- and ic.item_name = '153833072'
--and o.d_country_code = 'US' and oli.REF_FIELD4 = 'A'
--AND  (o.d_country_code = 'US' AND oli.ref_field4 = 'A')
--AND  not (     o.d_country_code = 'US'    AND NVL(oli.ref_field4, '¤') = 'A' )


--AND  (o.d_country_code = 'US' and  oli.REF_FIELD4 <> 'A'   OR oli.REF_FIELD4 IS NULL  OR oli.REF_FIELD4 = 'P'  )

GROUP BY 
    o.created_dttm,
    o.tc_order_id,
    o.d_city,
    o.LANE_NAME,
    o.ref_field_8,
    o.REF_FIELD_1,
    oli.invn_type,
    CASE
    WHEN o.order_type = 'ECOMM' and o.d_country_code = 'US' then oli.REF_FIELD4
    else NULL end,

    CASE
    WHEN o.order_type = 'ECOMM'  and o.d_country_code = 'US' then wm.lulu_coo_restriction.NEW_REF_VALUE 
    else null 
    end,
    o.order_type,
       CASE 
        WHEN o.TOTAL_NBR_OF_UNITS = 1 THEN 'Single'
    ELSE 'Multi'
END ,
    oli.item_name,
    oli_status.code_desc,
    ds.description,
    ic.REF_FIELD2,
    ic.REF_FIELD3,
    ic.item_style,
    ic.Unit_Volume,
    oli.description,
    oli.order_qty,
    oli.ALLOCATED_QTY,
    ifm.pick_locn_assign_type,
    ic.PRODUCT_CLASS_ID,
    im.PROD_GROUP,
    o.d_country_code,
    f.zone,
    f.Region,
    o.d_facility_alias_id,
    o.MARK_FOR,
    o.DELIVERY_END_DTTM)

SELECT
    MainTable.order_type            AS ORDER_TYPE,
    MainTable.created_dttm          AS CREATED_DTTM,
    MainTable.Hour                  AS CREATED_HOUR,
    MainTable.delivery_end_dttm     AS DELIVERY_END_DTTM,
    MainTable.tc_order_id           AS TC_ORDER_ID,
    MainTable.single_multi_flag     AS SINGLE_MULTI_FLAG,
    MainTable.order_status          AS ORDER_STATUS,
    MainTable.invn_type             AS INVN_TYPE,
    MainTable.ref_field4            AS REF_FIELD4,
    MainTable.actual_ref_field_4    AS ACTUAL_REF_FIELD_4,
    MainTable.zone                  AS ZONE,
    MainTable.region                AS REGION,
    MainTable.store                 AS STORE,
    MainTable.mark_for              AS MARK_FOR,
    MainTable.d_country_code        AS D_COUNTRY_CODE,
    MainTable.d_city                AS D_CITY,
    MainTable.lane_name             AS LANE_NAME,
    MainTable.ref_field_8           AS REF_FIELD_8,
    MainTable.ref_field_1           AS REF_FIELD_1,
    MainTable.order_line_status     AS ORDER_LINE_STATUS,
    TRIM(BOTH ',' FROM (
        CASE WHEN COUNT(CASE WHEN MainTable.product_class_id = 172 THEN 1 END)
             OVER (PARTITION BY MainTable.tc_order_id) > 0 THEN 'Mats' ELSE '' END
      || CASE WHEN COUNT(CASE WHEN MainTable.pick_locn_assign_type = 'P06' THEN 1 END)
             OVER (PARTITION BY MainTable.tc_order_id) > 0 THEN 'Bags' ELSE '' END
      || CASE WHEN COUNT(CASE WHEN MainTable.pick_locn_assign_type = 'P09' THEN 1 END)
             OVER (PARTITION BY MainTable.tc_order_id) > 0 THEN ',Footwear' ELSE '' END
      || CASE WHEN COUNT(CASE WHEN MainTable.item_style LIKE 'LM%' 
                                AND MainTable.pick_locn_assign_type NOT IN ('P06','P09')
                                AND MainTable.product_class_id <> 172 THEN 1 END)
             OVER (PARTITION BY MainTable.tc_order_id) > 0 THEN ',Mens' ELSE '' END
      || CASE WHEN COUNT(CASE WHEN MainTable.item_style LIKE 'LW%' 
                                AND MainTable.pick_locn_assign_type NOT IN ('P06','P09')
                                AND MainTable.product_class_id <> 172 THEN 1 END)
             OVER (PARTITION BY MainTable.tc_order_id) > 0 THEN ',Womens' ELSE '' END
      || CASE WHEN COUNT(CASE WHEN MainTable.item_style LIKE 'LU%' 
                                AND MainTable.pick_locn_assign_type NOT IN ('P06','P09')
                                AND MainTable.product_class_id <> 172 THEN 1 END)
             OVER (PARTITION BY MainTable.tc_order_id) > 0 THEN ',Accessories' ELSE '' END
    ))                               AS ORDER_INVENTORY_FLAGS,
    MainTable.wave_building         AS WAVE_BUILDING,
    MainTable.item_name             AS ITEM_NAME,
    MainTable.order_qty             AS ORDER_QTY,
    MainTable.allocated_qty         AS ALLOCATED_QTY,
    MainTable.required_quantity     AS REQUIRED_QUANTITY,
    MainTable.ref_field2            AS REF_FIELD2,
    MainTable.ref_field3            AS REF_FIELD3,
    MainTable.item_style            AS ITEM_STYLE,
    MainTable.unit_volume           AS UNIT_VOLUME,
    MainTable.description           AS DESCRIPTION,
    MainTable.pick_locn_assign_type AS PICK_LOCN_ASSIGN_TYPE,
    MainTable.product_class_id      AS PRODUCT_CLASS_ID,
    MainTable.product_class         AS PRODUCT_CLASS,
    MainTable."MIS Active Available"   AS MIS_ACTIVE_AVAILABLE,
    MainTable."MIS Reserve Available"  AS MIS_RESERVE_AVAILABLE,
    MainTable."MIL Reserve Available"  AS MIL_RESERVE_AVAILABLE,
    MainTable."MIL Active Available"   AS MIL_ACTIVE_AVAILABLE,
    MainTable."MA Active Available"    AS MA_ACTIVE_AVAILABLE,
    MainTable."MN Active Available"    AS MN_ACTIVE_AVAILABLE,
    MainTable."MH Active Available"    AS MH_ACTIVE_AVAILABLE,
    MainTable."Needs Further Research" AS NEEDS_FURTHER_RESEARCH,
    MainTable."MIL_SHUNT"               AS MIL_SHUNT,
    MainTable."MIS_SHUNT"               AS MIS_SHUNT,
    MainTable."VAS"                     AS VAS,
    MainTable."Total Unallocatable"     AS TOTAL_UNALLOCATABLE,
    MainTable."Total Required"          AS TOTAL_REQUIRED,
    MainTable."WAVEABLE QUANTITY"       AS WAVEABLE_QUANTITY,
    MainTable.allocatable_flag      AS ALLOCATABLE_FLAG,
    CASE 
      WHEN SUM(CASE WHEN MainTable."WAVEABLE QUANTITY" < 0 THEN 1 ELSE 0 END)
           OVER (PARTITION BY MainTable.tc_order_id) > 0
      THEN 'WAVING ISSUE'
      ELSE 'WAVEABLE'
    END                            AS WAVING_ISSUE
FROM MainTable
--where MainTable."MIS Active Available" like ('%ZZ%')
